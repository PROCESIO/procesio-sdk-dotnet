<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProcesioSDK</name>
    </assembly>
    <members>
        <member name="P:ProcesioSDK.Dto.Data.FileContent.VariableName">
            <summary>
            The variable name
            </summary>
        </member>
        <member name="P:ProcesioSDK.Dto.Data.FileContent.Data">
            <summary>
            File content
            </summary>
        </member>
        <member name="P:ProcesioSDK.Dto.Data.FileContent.Name">
            <summary>
            File name with extension
            </summary>
        </member>
        <member name="P:ProcesioSDK.Dto.Data.FileContent.FileId">
            <summary>
            File id generated by procesio platform
            </summary>
        </member>
        <member name="T:ProcesioSDK.Dto.Data.ProcesioToken">
            <summary>
            The class used for the response of Authentication method
            </summary>
        </member>
        <member name="P:ProcesioSDK.Dto.Data.ProcesioToken.StatusCode">
            <summary>
            If status code is not 200OK then Authentication failed
            </summary>
        </member>
        <member name="T:ProcesioSDK.Dto.Data.ProcesioUser">
            <summary>
            The class used for the parameters that are given to the Authenticate method
            </summary>
        </member>
        <member name="T:ProcesioSDK.Dto.LaunchResponse">
            <summary>
            The class used for the response of Launch Process Instance method, that returns the instance id
            </summary>
        </member>
        <member name="T:ProcesioSDK.Dto.ProcessStatusResponse">
            <summary>
            The response object for the started process instance
            </summary>
        </member>
        <member name="P:ProcesioSDK.Dto.ProcessStatusResponse.InstanceId">
            <summary>
            The process instance id
            </summary>
        </member>
        <member name="P:ProcesioSDK.Dto.ProcessStatusResponse.State">
            <summary>
            Process state
            </summary>
        </member>
        <member name="P:ProcesioSDK.Dto.ProcessStatusResponse.Status">
            <summary>
            Process state description
            </summary>
        </member>
        <member name="P:ProcesioSDK.Dto.ProcessStatusResponse.Variable">
            <summary>
            Variable list value
            </summary>
        </member>
        <member name="T:ProcesioSDK.Dto.PublishResponse">
            <summary>
            The class used for the response of Publish Process method, that returns the variables, flow id, description,
            title, first name, last name, workspace name of the process
            </summary>
        </member>
        <member name="T:ProcesioSDK.Dto.UploadResponse">
            <summary>
            The class used for the response of Upload Input File To Process method, that returns the file id
            </summary>
        </member>
        <member name="M:ProcesioSDK.ProcessFileUploadException.#ctor">
            <summary>
            Initializes a new instance of the ProcesioSDK.ProcessFileUploadException class.
            </summary>
        </member>
        <member name="M:ProcesioSDK.ProcessFileUploadException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProcesioSDK.ProcessFileUploadException class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ProcesioSDK.ProcessFileUploadException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ProcesioSDK.ProcessFileUploadException class with 
            a specified error message and a reference to the inner exception that is 
            the  cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException
            parameter is not a null reference (Nothing in Visual Basic), the current exception
            is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:ProcesioSDK.ProcessFileUploadException.#ctor(System.Collections.Generic.IEnumerable{ProcesioSDK.Contracts.IErrorResponse})">
            <summary>
            Initializes a new instance of the ProcesioSDK.ProcessFileUploadException class with a specified error message.
            </summary>
            <param name="errors">The message that describes the error.</param>
        </member>
        <member name="M:ProcesioSDK.ProcessPublishException.#ctor">
            <summary>
            Initializes a new instance of the ProcesioSDK.ProcessPublishException class.
            </summary>
        </member>
        <member name="M:ProcesioSDK.ProcessPublishException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProcesioSDK.ProcessPublishException class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ProcesioSDK.ProcessPublishException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ProcesioSDK.ProcessPublishException class with 
            a specified error message and a reference to the inner exception that is 
            the  cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException
            parameter is not a null reference (Nothing in Visual Basic), the current exception
            is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:ProcesioSDK.ProcessPublishException.#ctor(System.Collections.Generic.IEnumerable{ProcesioSDK.Contracts.IErrorResponse})">
            <summary>
            Initializes a new instance of the ProcesioSDK.ProcessPublishException class with a specified error message.
            </summary>
            <param name="errors">The message that describes the error.</param>
        </member>
        <member name="T:ProcesioSDK.IProcesioClient">
            <summary>
            Procesio Client used to communicate with the Procesio web services
            </summary>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.Authenticate(ProcesioSDK.Dto.Data.ProcesioUser)">
            <summary>
            Authenticate user by credentials 
            </summary>
            <param name="procesioUser">The Authentication requires user Procesio credentials, as username, password, realm,
             client id and grant type.</param>
            <returns>Procesio Tokens, as acces token, refresh token and token valability.</returns>
            <exception cref="T:System.Net.Http.HttpRequestException">This exception is thrown if the Procesio Authentication request failed</exception>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.RefreshToken(ProcesioSDK.Dto.Data.ProcesioToken)">
            <summary>
            Refresh user token valability
            </summary>
            <param name="procesioToken">The Refresh Token requires acces token, refresh token and token valability.</param>
            <returns>True, if token was updated, otherwise false.</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.PublishProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Publish the process to new runtime instance
            </summary>
            <param name="processId">The process id</param>
            <param name="inputValues">The name of the variables used for flow and their values</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The generated process instance or error response</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.PublishProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Publish the process to new runtime instance
            </summary>
            <param name="processId">The process id</param>
            <param name="inputValues">The name of the variables used for flow and their values</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The generated process instance or error response</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.LaunchProcessInstance(System.String,ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Launch process instance.
            </summary>
            <param name="processInstanceId">The flow id</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The launch process response or error response</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.LaunchProcessInstance(System.String,ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Launch process instance.
            </summary>
            <param name="processInstanceId">The flow id</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The launch process response or error response</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.LaunchProcessInstance(System.String,ProcesioSDK.Dto.Data.ProcesioToken,System.String,System.Int32)">
            <summary>
            Launch process instance.
            </summary>
            <param name="processInstanceId">The flow id</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="timeOut"></param>
            <returns>The process status after execution or instance id on timeout</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.LaunchProcessInstance(System.String,ProcesioSDK.Dto.Data.ProcesioApiKey,System.String,System.Int32)">
            <summary>
            Launch process instance.
            </summary>
            <param name="processInstanceId">The flow id</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="timeOut"></param>
            <returns>The process status after execution or instance id on timeout</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.RunProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioToken,System.String,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent})">
            <summary>
            Run process
            </summary>
            <param name="processId">The process id</param>
            <param name="inputValues">The name of the variables used for flow and their values</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification method</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="inputFiles">If process has input file(s) - Required: VariableName, Data, Name. Can be null if no files are required.</param>
            <returns>The launch process response or error response</returns>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if processId is null or empty</exception>
            <exception cref="T:ProcesioSDK.ProcessPublishException">This exception is thrown if the Process publish operation has failed</exception>
            <exception cref="T:ProcesioSDK.ProcessFileUploadException">This exception is thrown if the Input file upload operation has failed for either of the input files</exception>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.RunProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioToken,System.String,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent},System.Int32)">
            <summary>
            Run process and wait for the process status. If timeout expires, then the process instance id will be saved.
            </summary>
            <param name="processId">The process id to execute</param>
            <param name="inputValues">The input values used by the process</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="inputFiles">If process has input file(s) - Required: VariableName, Data, Name. Can be null if no files are required.</param>
            <param name="timeOut">number of seconds to wait for the process or return the instance id</param>
            <returns>The process status after execution or instance id on timeout</returns>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if processId is null or empty</exception>
            <exception cref="T:ProcesioSDK.ProcessPublishException">This exception is thrown if the Process publish operation has failed</exception>
            <exception cref="T:ProcesioSDK.ProcessFileUploadException">This exception is thrown if the Input file upload operation has failed for either of the input files</exception>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.RunProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioApiKey,System.String,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent})">
            <summary>
            Run process
            </summary>
            <param name="processId">The process id</param>
            <param name="inputValues">The name of the variables used for flow and their values</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="inputFiles">If process has input file(s) - Required: VariableName, Data, Name. Can be null if no files are required.</param>
            <returns>The launch process response or error response</returns>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if processId is null or empty</exception>
            <exception cref="T:ProcesioSDK.ProcessPublishException">This exception is thrown if the Process publish operation has failed</exception>
            <exception cref="T:ProcesioSDK.ProcessFileUploadException">This exception is thrown if the Input file upload operation has failed for either of the input files</exception>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.RunProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioApiKey,System.String,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent},System.Int32)">
            <summary>
            Run process and wait for the process status. If timeout expires, then the process instance id will be saved.
            </summary>
            <param name="processId">The process id to execute</param>
            <param name="inputValues">The input values used by the process</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="inputFiles">If process has input file(s) - Required: VariableName, Data, Name. Can be null if no files are required.</param>
            <param name="timeOut">number of seconds to wait for the process or return the instance id</param>
            <returns>The process status after execution or instance id on timeout</returns>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if processId is null or empty</exception>
            <exception cref="T:ProcesioSDK.ProcessPublishException">This exception is thrown if the Process publish operation has failed</exception>
            <exception cref="T:ProcesioSDK.ProcessFileUploadException">This exception is thrown if the Input file upload operation has failed for either of the input files</exception>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.GetProcessStatus(System.String,ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Get the process status after or during execution
            </summary>
            <param name="processInstanceId">Process instance id, returned by publish process method</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The process status response</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.GetProcessStatus(System.String,ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Get the process status after or during execution
            </summary>
            <param name="processInstanceId">Process instance id, returned by publish process method</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The process status response</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.UploadProcessInputFiles(ProcesioSDK.Dto.Data.ProcessInstance,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent},ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Upload each input file used for process instance if the process requires it
            </summary>
            <param name="processInstance">Process instance, returned by publish process method</param>
            <param name="inputFiles">The file details, as file path, variable name, lenght</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The procesio generated file id to match the input</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.UploadProcessInputFiles(ProcesioSDK.Dto.Data.ProcessInstance,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent},ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Upload each input file used for process instance if the process requires it
            </summary>
            <param name="processInstance">Process instance, returned by publish process method</param>
            <param name="inputFiles">The file details, as file path, variable name, lenght</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The procesio generated file id to match the input</returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.UploadProcessInputFiles(ProcesioSDK.Dto.Data.ProcessInstance,ProcesioSDK.Dto.Data.FileContent,ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Upload the input file used for a process instance
            </summary>
            <param name="processInstance">Process instance, returned by publish process method</param>
            <param name="inputFile">The file details, as file path, variable name, lenght</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns></returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.UploadProcessInputFiles(ProcesioSDK.Dto.Data.ProcessInstance,ProcesioSDK.Dto.Data.FileContent,ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Upload the input file used for a process instance
            </summary>
            <param name="processInstance">Process instance, returned by publish process method</param>
            <param name="inputFile">The file details, as file path, variable name, lenght</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns></returns>
        </member>
        <member name="M:ProcesioSDK.IProcesioClient.GetProcessInputFileContent(ProcesioSDK.Dto.Data.ProcessInstance)">
            <summary>
            Gets the file information required for the process file upload method
            </summary>
            <param name="process"></param>
            <returns>A list of FileContent for each input file. This object contains the fileId generated by the Procesio system.</returns>
        </member>
        <member name="T:ProcesioSDK.ProcesioClient">
            <summary>
            Procesio Client used to communicate with the Procesio web services
            </summary>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates an instance of the Procesio SDK that can be used to access the main features provided by the Procesio App
            </summary>
            <param name="config">must have a ProcesioConfig section within appsettings file.</param>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the Procesio Configurationb is not valid</exception>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.#ctor(ProcesioSDK.Config.ProcesioConfig)">
            <summary>
            Creates an instance of the Procesio SDK that can be used to access the main features provided by the Procesio App
            </summary>
            <param name="procesioConfig">The Procesio Configuration required to access the Hosted Procesio server.</param>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if the Procesio Configurationb is not valid</exception>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.Authenticate(ProcesioSDK.Dto.Data.ProcesioUser)">
            <summary>
            Authenticate user by credentials 
            </summary>
            <param name="procesioUser">The Authentication requires user Procesio credentials, as username, password, realm,
             client id and grant type.</param>
            <returns>Procesio Tokens, as acces token, refresh token and token valability.</returns>
            <exception cref="T:System.Net.Http.HttpRequestException">This exception is thrown if the Procesio Authentication request failed</exception>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.RefreshToken(ProcesioSDK.Dto.Data.ProcesioToken)">
            <summary>
            Refresh user token valability
            </summary>
            <param name="procesioToken">The Refresh Token requires acces token, refresh token and token valability.</param>
            <returns>True, if token was updated, otherwise false.</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.PublishProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Publish the process to new runtime instance
            </summary>
            <param name="processId">The process id</param>
            <param name="inputValues">The name of the variables used for flow and their values</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The generated process instance or error response</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.PublishProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Publish the process to new runtime instance
            </summary>
            <param name="processId">The process id</param>
            <param name="inputValues">The name of the variables used for flow and their values</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The generated process instance or error response</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.GetProcessInputFileContent(ProcesioSDK.Dto.Data.ProcessInstance)">
            <summary>
            Gets the file information required for the process file upload method
            </summary>
            <param name="process"></param>
            <returns>A list of FileContent for each input file. This object contains the fileId generated by the Procesio system.</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.UploadProcessInputFiles(ProcesioSDK.Dto.Data.ProcessInstance,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent},ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Upload each input file used for process instance if the process requires it
            </summary>
            <param name="processInstance">Process instance, returned by publish process method</param>
            <param name="inputFiles">The file details, as file path, variable name, lenght</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The procesio generated file id to match the input</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.UploadProcessInputFiles(ProcesioSDK.Dto.Data.ProcessInstance,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent},ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Upload each input file used for process instance if the process requires it
            </summary>
            <param name="processInstance">Process instance, returned by publish process method</param>
            <param name="inputFiles">The file details, as file path, variable name, lenght</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The procesio generated file id to match the input</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.UploadProcessInputFiles(ProcesioSDK.Dto.Data.ProcessInstance,ProcesioSDK.Dto.Data.FileContent,ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Upload the input file used for a process instance
            </summary>
            <param name="processInstance">Process instance, returned by publish process method</param>
            <param name="inputFile">The file details, as file path, variable name, lenght</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns></returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.UploadProcessInputFiles(ProcesioSDK.Dto.Data.ProcessInstance,ProcesioSDK.Dto.Data.FileContent,ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Upload the input file used for a process instance
            </summary>
            <param name="processInstance">Process instance, returned by publish process method</param>
            <param name="inputFile">The file details, as file path, variable name, lenght</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns></returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.LaunchProcessInstance(System.String,ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Launch process instance.
            </summary>
            <param name="processInstanceId">The flow id</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The launch process response or error response</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.LaunchProcessInstance(System.String,ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Launch process instance.
            </summary>
            <param name="processInstanceId">The flow id</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The launch process response or error response</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.LaunchProcessInstance(System.String,ProcesioSDK.Dto.Data.ProcesioToken,System.String,System.Int32)">
            <summary>
            Launch process instance.
            </summary>
            <param name="processInstanceId">The flow id</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="timeOut"></param>
            <returns>The process status after execution or instance id on timeout</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.LaunchProcessInstance(System.String,ProcesioSDK.Dto.Data.ProcesioApiKey,System.String,System.Int32)">
            <summary>
            Launch process instance.
            </summary>
            <param name="processInstanceId">The flow id</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="timeOut"></param>
            <returns>The process status after execution or instance id on timeout</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.RunProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioToken,System.String,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent})">
            <summary>
            Run process
            </summary>
            <param name="processId">The process id</param>
            <param name="inputValues">The name of the variables used for flow and their values</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification method</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="inputFiles">If process has input file(s) - Required: VariableName, Data, Name. Can be null if no files are required.</param>
            <returns>The launch process response or error response</returns>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if processId is null or empty</exception>
            <exception cref="T:ProcesioSDK.ProcessPublishException">This exception is thrown if the Process publish operation has failed</exception>
            <exception cref="T:ProcesioSDK.ProcessFileUploadException">This exception is thrown if the Input file upload operation has failed for either of the input files</exception>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.RunProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioToken,System.String,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent},System.Int32)">
            <summary>
            Run process and wait for the process status. If timeout expires, then the process instance id will be saved.
            </summary>
            <param name="processId">The process id to execute</param>
            <param name="inputValues">The input values used by the process</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="inputFiles">If process has input file(s) - Required: VariableName, Data, Name. Can be null if no files are required.</param>
            <param name="timeOut">number of seconds to wait for the process or return the instance id</param>
            <returns>The process status after execution or instance id on timeout</returns>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if processId is null or empty</exception>
            <exception cref="T:ProcesioSDK.ProcessPublishException">This exception is thrown if the Process publish operation has failed</exception>
            <exception cref="T:ProcesioSDK.ProcessFileUploadException">This exception is thrown if the Input file upload operation has failed for either of the input files</exception>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.RunProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioApiKey,System.String,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent})">
            <summary>
            Run process
            </summary>
            <param name="processId">The process id</param>
            <param name="inputValues">The name of the variables used for flow and their values</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="inputFiles">If process has input file(s) - Required: VariableName, Data, Name. Can be null if no files are required.</param>
            <returns>The launch process response or error response</returns>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if processId is null or empty</exception>
            <exception cref="T:ProcesioSDK.ProcessPublishException">This exception is thrown if the Process publish operation has failed</exception>
            <exception cref="T:ProcesioSDK.ProcessFileUploadException">This exception is thrown if the Input file upload operation has failed for either of the input files</exception>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.RunProcess(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ProcesioSDK.Dto.Data.ProcesioApiKey,System.String,System.Collections.Generic.List{ProcesioSDK.Dto.Data.FileContent},System.Int32)">
            <summary>
            Run process and wait for the process status. If timeout expires, then the process instance id will be saved.
            </summary>
            <param name="processId">The process id to execute</param>
            <param name="inputValues">The input values used by the process</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <param name="inputFiles">If process has input file(s) - Required: VariableName, Data, Name. Can be null if no files are required.</param>
            <param name="timeOut">number of seconds to wait for the process or return the instance id</param>
            <returns>The process status after execution or instance id on timeout</returns>
            <exception cref="T:System.ArgumentNullException">This exception is thrown if processId is null or empty</exception>
            <exception cref="T:ProcesioSDK.ProcessPublishException">This exception is thrown if the Process publish operation has failed</exception>
            <exception cref="T:ProcesioSDK.ProcessFileUploadException">This exception is thrown if the Input file upload operation has failed for either of the input files</exception>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.GetProcessStatus(System.String,ProcesioSDK.Dto.Data.ProcesioToken,System.String)">
            <summary>
            Get the process status after or during execution
            </summary>
            <param name="processInstanceId">Process instance id, returned by publish process method</param>
            <param name="procesioToken">The access token, refresh token and token valability, returned by Authentification</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The process status response</returns>
        </member>
        <member name="M:ProcesioSDK.ProcesioClient.GetProcessStatus(System.String,ProcesioSDK.Dto.Data.ProcesioApiKey,System.String)">
            <summary>
            Get the process status after or during execution
            </summary>
            <param name="processInstanceId">Process instance id, returned by publish process method</param>
            <param name="procesioApiKey">The api key name and value required to authenticate every Procesio request</param>
            <param name="workspace">The workspace name. Can be null if working on the personal workspace.</param>
            <returns>The process status response</returns>
        </member>
    </members>
</doc>
